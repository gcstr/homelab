services:
  blinko-website:
    image: blinkospace/blinko:1.6.3
    container_name: blinko-website
    environment:
      NODE_ENV: production
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - blinko:/app/.blinko 
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://blinko-website:1111/"]
      interval: 30s 
      timeout: 10s   
      retries: 5     
      start_period: 30s 
    networks:
      - blinko-network
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.blinko-website.rule=Host(`blinko.gustavocastro.com`)
      - traefik.http.routers.blinko-website.entrypoints=websecure
      - traefik.http.routers.blinko-website.tls=true
      - traefik.http.services.blinko-website.loadbalancer.server.port=1111

  postgres:
    image: postgres:17
    container_name: blinko-postgres
    restart: always
    ports:
      - 5435:5432
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: Europe/Amsterdam
    volumes:
      - blinko_postgres:/var/lib/postgresql/data
    healthcheck:
      test:
        ["CMD", "pg_isready", "-U", "postgres", "-d", "postgres"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - blinko-network

volumes:
  blinko:
    external: true
  blinko_postgres:
    external: true

networks:
  blinko-network:
    external: true
  traefik:
    external: true